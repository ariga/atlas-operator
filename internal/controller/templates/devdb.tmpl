apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Name }}
  namespace: {{ .Namespace }}
spec:
  selector:
    matchLabels:
      "app.kubernetes.io/name": "atlas-dev-db"
      "app.kubernetes.io/instance": "{{ .Name }}"
      "app.kubernetes.io/part-of": "atlas-operator"
      "app.kubernetes.io/created-by": "controller-manager"
      "atlasgo.io/engine": "{{ .Driver }}"
  replicas: 1
  template:
    metadata:
      labels:
        "app.kubernetes.io/name": "atlas-dev-db"
        "app.kubernetes.io/instance": "{{ .Name }}"
        "app.kubernetes.io/part-of": "atlas-operator"
        "app.kubernetes.io/created-by": "controller-manager"
        "atlasgo.io/engine": "{{ .Driver }}"
    spec:
      {{- if ne .Driver "sqlserver" }}
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ .UID }}
      {{- end }}
      containers:
        - name: {{ .Driver }}
          {{- if ne .Driver "sqlserver" }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          {{- end }}
          {{- if eq .Driver "mysql" }}
          image: mysql:8
          env:
          - name: MYSQL_ROOT_PASSWORD
            value: pass
          {{- if .SchemaBound }}
          - name: MYSQL_DATABASE
            value: {{ .DB }}
          {{- end }}
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            exec:
              command: [
                "mysql", "-u", "root", "-h", "127.0.0.1", "-ppass", "-e", "SELECT 1"
              ]
          {{- else if eq .Driver "postgres" }}
          image: postgres:15
          env:
            - name: POSTGRES_DB
              value: {{ .DB }}
            - name: POSTGRES_PASSWORD
              value: pass
            - name: POSTGRES_USER
              value: root
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            exec:
              command: [ "pg_isready" ]
          {{- else if eq .Driver "sqlserver" }}
          image: mcr.microsoft.com/mssql/server:2022-latest
          env:
            - name: MSSQL_SA_PASSWORD
              value: {{ .Pass }}
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            exec:
              command: [
                "/opt/mssql-tools18/bin/sqlcmd",
                "-C", "-U", "sa", "-P", "{{ .Pass }}",
                "-Q", "SELECT 1"
              ]
          {{- end }}
          ports:
          - containerPort: {{ .Port }}
            name: {{ .Driver }}

