# Copyright 2023 The Atlas Operator Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Helm
run-name: ${{ github.ref_name }} ${{ github.actor }}
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Chart version'
        type: string
        required: true
  push:
    tags:
      - "v*"
jobs:
  helm-test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1
      - name: Install Skaffold
        run: |
          curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/v2.3.1/skaffold-linux-amd64 && \
          sudo install skaffold /usr/local/bin/
      - name: Setup Helm
        uses: azure/setup-helm@v4
      - name: Run e2e tests with Operator
        run: |
          make test-e2e \
            ATLAS_TOKEN=${{ secrets.ATLAS_TOKEN }} \
            KIND_CLUSTER=chart-testing \
            TEST_RUN='(schema|migration)-mysql'
        env:
          SKAFFOLD_PROFILE: helm
      - name: test env vars
        run: |
          helm template atlas-operator charts/atlas-operator \
            --set-json=extraEnvs='[{"name":"NORMAL_ENV","value":"value"}]' | grep NORMAL_ENV
  helm-push:
    name: Push to ghcr.io
    needs: [helm-test]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: charts/
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-helm@v4
      - name: Set version env
        id: set_version
        ## if version is not provided as input, use the tag name
        run: |
          echo "tag=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          if [ -z "${{ github.event.inputs.version }}" ]; then
              echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi
      - name: validate semver syntax
        run: echo "${{ steps.set_version.outputs.tag }}" | grep -e "^v[[:digit:]]\{1,3\}.[[:digit:]]\{1,3\}.[[:digit:]]\{1,3\}$"
      - name: helm package
        run: helm package atlas-operator --version ${{ steps.set_version.outputs.tag }} --app-version ${{ steps.set_version.outputs.tag }}
      - name: login to gcr using helm
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io/ariga/atlas-operator --username ${{ github.repository_owner }} --password-stdin
      - name: echo tag
        run: echo ${{ steps.set_version.outputs.tag }}
      # - name: helm push
      #   run: |
      #     helm push atlas-operator-${{ steps.set_version.outputs.tag }}.tgz oci://ghcr.io/ariga/charts
