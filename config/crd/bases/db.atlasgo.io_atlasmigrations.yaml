---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: atlasmigrations.db.atlasgo.io
spec:
  group: db.atlasgo.io
  names:
    kind: AtlasMigration
    listKind: AtlasMigrationList
    plural: atlasmigrations
    singular: atlasmigration
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: Reason
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AtlasMigration is the Schema for the atlasmigrations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AtlasMigrationSpec defines the desired state of AtlasMigration
            properties:
              cloud:
                description: Cloud defines the Atlas Cloud configuration.
                properties:
                  project:
                    type: string
                  tokenFrom:
                    description: TokenFrom defines a reference to a secret key that
                      contains the Atlas Cloud Token
                    properties:
                      secretKeyRef:
                        description: SecretKeyRef references to the key of a secret
                          in the same namespace.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  url:
                    type: string
                type: object
              credentials:
                description: Credentials defines the credentials to use when connecting
                  to the database. Used instead of URL or URLFrom.
                properties:
                  database:
                    type: string
                  host:
                    type: string
                  parameters:
                    additionalProperties:
                      type: string
                    type: object
                  password:
                    type: string
                  passwordFrom:
                    description: PasswordFrom references a key containing the password.
                    properties:
                      secretKeyRef:
                        description: SecretKeyRef defines the secret key reference
                          to use for the password.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  port:
                    type: integer
                  scheme:
                    type: string
                  user:
                    type: string
                type: object
              dir:
                description: Dir defines the directory to use for migrations as a
                  configmap key reference.
                properties:
                  configMapRef:
                    description: ConfigMapRef defines the configmap to use for migrations
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  local:
                    additionalProperties:
                      type: string
                    description: Local defines the local migration directory.
                    type: object
                  remote:
                    description: Remote defines the Atlas Cloud migration directory.
                    properties:
                      name:
                        type: string
                      tag:
                        type: string
                    type: object
                type: object
              envName:
                description: EnvName sets the environment name used for reporting
                  runs to Atlas Cloud.
                type: string
              revisionsSchema:
                description: RevisionsSchema defines the schema that revisions table
                  resides in
                type: string
              url:
                description: URL of the target database schema.
                type: string
              urlFrom:
                description: URLs may be defined as a secret key reference.
                properties:
                  secretKeyRef:
                    description: SecretKeyRef references to the key of a secret in
                      the same namespace.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
            required:
            - dir
            type: object
          status:
            description: AtlasMigrationStatus defines the observed state of AtlasMigration
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of an object's state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastApplied:
                description: LastApplied is the unix timestamp of the most recent
                  successful versioned migration.
                format: int64
                type: integer
              lastAppliedVersion:
                description: LastAppliedVersion is the version of the most recent
                  successful versioned migration.
                type: string
              lastDeploymentUrl:
                description: LastDeploymentURL is the Deployment URL of the most recent
                  successful versioned migration.
                type: string
              observed_hash:
                description: ObservedHash is the hash of the most recent successful
                  versioned migration.
                type: string
            required:
            - lastApplied
            - observed_hash
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
